#!/bin/bash
# YFEvents Fresh Deployment Script - Ultra Simple Version
# This script deploys YFEvents Clean Architecture on a fresh Ubuntu server
# Usage: sudo ./DEPLOY_FRESH.sh

set -e  # Exit on any error

# Color codes for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Configuration
REPO_URL="https://github.com/AndrewSmigaj/YFEventsCopy.git"
APP_DIR="/var/www/yfevents"
DB_NAME="yakima_finds"
DB_USER="yfevents"

# Generate secure password
DB_PASS=$(openssl rand -base64 32 | tr -d "=+/" | cut -c1-25)

# Progress tracking
TOTAL_STEPS=10
CURRENT_STEP=0

# Helper functions
print_step() {
    CURRENT_STEP=$((CURRENT_STEP + 1))
    echo -e "\n${BLUE}[Step $CURRENT_STEP/$TOTAL_STEPS]${NC} $1"
    echo "=================================================="
}

print_success() {
    echo -e "${GREEN}✓${NC} $1"
}

print_error() {
    echo -e "${RED}✗ ERROR:${NC} $1" >&2
}

print_warning() {
    echo -e "${YELLOW}⚠${NC} $1"
}

# Check if running as root
if [[ $EUID -ne 0 ]]; then
   print_error "This script must be run as root (use sudo)"
   exit 1
fi

# Welcome message
clear
echo "======================================"
echo "  YFEvents Fresh Deployment Script"
echo "  Clean Architecture Edition"
echo "======================================"
echo ""
echo "This script will:"
echo "• Install all required software"
echo "• Set up the database securely"
echo "• Deploy the Clean Architecture system"
echo "• Configure Apache web server"
echo "• Create an admin account"
echo ""
read -p "Press ENTER to begin deployment... "

# Step 1: Update system
print_step "Updating system packages"
apt update -qq
apt upgrade -y -qq
print_success "System updated"

# Step 2: Install required packages
print_step "Installing required software"
echo "Installing: Apache, PHP 8.1, MySQL, Composer..."
DEBIAN_FRONTEND=noninteractive apt install -y -qq \
    apache2 \
    php8.1 \
    php8.1-mysql \
    php8.1-curl \
    php8.1-mbstring \
    php8.1-json \
    php8.1-xml \
    php8.1-gd \
    php8.1-fileinfo \
    php8.1-zip \
    mysql-server \
    composer \
    git \
    openssl >/dev/null 2>&1

print_success "All software installed"

# Step 3: Configure MySQL
print_step "Setting up MySQL database"
echo "Creating database and user..."

# Create database and user with mysql_native_password
mysql << EOF
CREATE DATABASE IF NOT EXISTS ${DB_NAME} CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
CREATE USER IF NOT EXISTS '${DB_USER}'@'localhost' IDENTIFIED WITH mysql_native_password BY '${DB_PASS}';
GRANT ALL PRIVILEGES ON ${DB_NAME}.* TO '${DB_USER}'@'localhost';
FLUSH PRIVILEGES;
EOF

# Save credentials for later reference
echo "Database Password: ${DB_PASS}" > /root/.yfevents_db_credentials
chmod 600 /root/.yfevents_db_credentials

print_success "Database configured"

# Step 4: Clone repository
print_step "Downloading YFEvents code"
if [ -d "$APP_DIR" ]; then
    print_warning "Removing existing installation"
    rm -rf "$APP_DIR"
fi

git clone -q -b main "$REPO_URL" "$APP_DIR"
cd "$APP_DIR"
print_success "Code downloaded"

# Step 5: Install PHP dependencies
print_step "Installing PHP dependencies"
sudo -u www-data composer install --no-dev --optimize-autoloader --quiet
print_success "Dependencies installed"

# Step 6: Configure environment
print_step "Configuring application"
echo "Setting up environment file..."

# Create .env with proper format (semicolon comments)
cat > .env << EOF
; YFEvents Environment Configuration
; Generated by DEPLOY_FRESH.sh

; Application Settings
APP_NAME=YFEvents
APP_ENV=production
APP_DEBUG=false
APP_URL=http://$(hostname -I | awk '{print $1}')

; Database Configuration
DB_CONNECTION=mysql
DB_HOST=localhost
DB_PORT=3306
DB_DATABASE=${DB_NAME}
DB_USERNAME=${DB_USER}
DB_PASSWORD=${DB_PASS}

; Logging
LOG_CHANNEL=file
LOG_LEVEL=INFO

; Google Maps (add your API key here)
GOOGLE_MAPS_API_KEY=

; Session Configuration
SESSION_DRIVER=file
SESSION_LIFETIME=120

; Module Settings
MODULES_ENABLED=yfauth,yfclaim,yftheme
EOF

# Set proper permissions
chown www-data:www-data .env
chmod 600 .env

print_success "Application configured"

# Step 7: Import database schemas
print_step "Setting up database tables"
echo "Importing schemas in correct order..."

# Import in dependency order
mysql -u "$DB_USER" -p"$DB_PASS" "$DB_NAME" < database/calendar_schema.sql
print_success "Core tables created"

mysql -u "$DB_USER" -p"$DB_PASS" "$DB_NAME" < database/modules_schema.sql
print_success "Module registry created"

mysql -u "$DB_USER" -p"$DB_PASS" "$DB_NAME" < modules/yfauth/database/schema.sql
print_success "Authentication tables created"

mysql -u "$DB_USER" -p"$DB_PASS" "$DB_NAME" < database/shop_claim_system.sql
print_success "Shop system tables created"

mysql -u "$DB_USER" -p"$DB_PASS" "$DB_NAME" < modules/yfclaim/database/schema.sql
print_success "Estate sales tables created"

# Step 8: Set permissions
print_step "Setting file permissions"
# Create required directories
mkdir -p storage/{cache,logs,sessions,uploads}
mkdir -p public/uploads/{events,shops,claims}

# Set ownership and permissions
chown -R www-data:www-data .
chmod -R 755 .
chmod 600 .env
chmod -R 775 storage
chmod -R 775 public/uploads

print_success "Permissions configured"

# Step 9: Configure Apache
print_step "Configuring web server"
echo "Setting up Apache for Clean Architecture..."

# Create virtual host configuration
cat > /etc/apache2/sites-available/yfevents.conf << 'EOF'
<VirtualHost *:80>
    # Clean Architecture - Point to public directory
    DocumentRoot /var/www/yfevents/public
    
    <Directory /var/www/yfevents/public>
        Options -Indexes +FollowSymLinks
        AllowOverride All
        Require all granted
    </Directory>
    
    # Logging
    ErrorLog ${APACHE_LOG_DIR}/yfevents-error.log
    CustomLog ${APACHE_LOG_DIR}/yfevents-access.log combined
</VirtualHost>
EOF

# Enable required modules and site
a2enmod rewrite headers expires >/dev/null 2>&1
a2ensite yfevents.conf >/dev/null 2>&1
a2dissite 000-default.conf >/dev/null 2>&1

# Restart Apache
systemctl restart apache2
print_success "Web server configured"

# Step 10: Create admin user
print_step "Creating administrator account"
echo ""
echo "Please set up your admin account:"
cd "$APP_DIR"
sudo -u www-data php scripts/deploy/create-admin.php || {
    print_warning "Admin creation skipped - you can create one later"
}

# Final summary
clear
echo ""
echo "======================================"
echo -e "${GREEN}  DEPLOYMENT SUCCESSFUL!${NC}"
echo "======================================"
echo ""
echo "Your YFEvents installation is ready!"
echo ""
echo -e "${BLUE}Access URLs:${NC}"
SERVER_IP=$(hostname -I | awk '{print $1}')
echo "• Main Site: http://$SERVER_IP/"
echo "• Admin Panel: http://$SERVER_IP/admin/"
echo "• Estate Sales: http://$SERVER_IP/modules/yfclaim/www/"
echo ""
echo -e "${BLUE}Database Credentials:${NC}"
echo "• Database: $DB_NAME"
echo "• Username: $DB_USER"
echo "• Password saved in: /root/.yfevents_db_credentials"
echo ""
echo -e "${BLUE}Next Steps:${NC}"
echo "1. Add your Google Maps API key to .env"
echo "2. Set up a domain name and SSL certificate"
echo "3. Configure event sources in the admin panel"
echo ""
echo -e "${GREEN}Deployment completed in $SECONDS seconds${NC}"
echo ""